#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Project Euler Problem 8
# The four adjacent digits in the 1000-digit number that have the greatest product
# are 9 × 9 × 8 × 9 = 5832.
#
# 73167176531330624919225119674426574742355349194934
# 96983520312774506326239578318016984801869478851843
# 85861560789112949495459501737958331952853208805511
# 12540698747158523863050715693290963295227443043557
# 66896648950445244523161731856403098711121722383113
# 62229893423380308135336276614282806444486645238749
# 30358907296290491560440772390713810515859307960866
# 70172427121883998797908792274921901699720888093776
# 65727333001053367881220235421809751254540594752243
# 52584907711670556013604839586446706324415722155397
# 53697817977846174064955149290862569321978468622482
# 83972241375657056057490261407972968652414535100474
# 82166370484403199890008895243450658541227588666881
# 16427171479924442928230863465674813919123162824586
# 17866458359124566529476545682848912883142607690042
# 24219022671055626321111109370544217506941658960408
# 07198403850962455444362981230987879927244284909188
# 84580156166097919133875499200524063689912560717606
# 05886116467109405077541002256983155200055935729725
# 71636269561882670428252483600823257530420752963450
#
# Find the thirteen adjacent digits in the 1000-digit number that have the
# greatest product. What is the value of this product?

a = "73167176531330624919225119674426574742355349194934"
b = "96983520312774506326239578318016984801869478851843"
c = "85861560789112949495459501737958331952853208805511"
d = "12540698747158523863050715693290963295227443043557"
e = "66896648950445244523161731856403098711121722383113"
f = "62229893423380308135336276614282806444486645238749"
g = "30358907296290491560440772390713810515859307960866"
h = "70172427121883998797908792274921901699720888093776"
i = "65727333001053367881220235421809751254540594752243"
j = "52584907711670556013604839586446706324415722155397"
k = "53697817977846174064955149290862569321978468622482"
l = "83972241375657056057490261407972968652414535100474"
m = "82166370484403199890008895243450658541227588666881"
n = "16427171479924442928230863465674813919123162824586"
o = "17866458359124566529476545682848912883142607690042"
p = "24219022671055626321111109370544217506941658960408"
q = "07198403850962455444362981230987879927244284909188"
r = "84580156166097919133875499200524063689912560717606"
s = "05886116467109405077541002256983155200055935729725"
t = "71636269561882670428252483600823257530420752963450"

numString = a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t

i = 0
n = 13
numStringLen = len(numString)
products = []

while((i+n)<=numStringLen):
    numbers = numString[i:(i+n)]
    product = int(numbers[0])
    for j in range(1,n):
        product *= int(numbers[j])
    products.append(product)
    i+=1

print max(products)
